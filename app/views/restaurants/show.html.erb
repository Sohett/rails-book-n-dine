<div class="container">
  <h2><%= @restaurant.name%></h2>

  <div class="card" style="background-image: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.2)), url('https://kitt.lewagon.com/placeholder/cities/shanghai');">
    <div class="card-category">Popular</div>
  </div>
  <div class="text-center">

    <li>
      <strong>Owner:</strong> <%= @restaurant.user.first_name %> <%= @restaurant.user.last_name %> | <%= @restaurant.user.registration.email %>
    </li>
    <li>
      <strong>Address:</strong> <%= @restaurant.address %>
      | <strong>Municipality:</strong> <%= @restaurant.municipality %>
      | <strong>Capacity:</strong> <%= @restaurant.capacity %>
      | <strong>Category:</strong> <%= @restaurant.category %>
    </li>
  </div>
  <div class ="btn-show text-center">
    <%= link_to "Book this restaurant", new_restaurant_booking_path(@restaurant), class: "btn btn-primary" %>
  </div>
  <%= link_to "Back", restaurants_path %>
</div>





<div id="map" style="width: 100%; height: 600px;"></div>
<% if @hash[0][:lat].nil? %>

<%= content_for(:after_js) do %>
<script type="text/javascript">
$(document).ready(function() {
  alert('The restaurant address was unfortunately not properly entered');
});
</script>
<% end %>

<% else %>

<% content_for(:after_js) do %>
<script type="text/javascript">
$(document).ready(function() {
  var handler = Gmaps.build('Google');
  var styles = [
    {
      "featureType": "landscape.man_made",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#f7f1df"
        }
      ]
    },
    {
      "featureType": "landscape.natural",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#d0e3b4"
        }
      ]
    },
    {
      "featureType": "landscape.natural.terrain",
      "elementType": "geometry",
      "stylers": [
        {
          "visibility": "off"
        }
      ]
    },
    {
      "featureType": "poi",
      "elementType": "labels",
      "stylers": [
        {
          "visibility": "off"
        }
      ]
    },
    {
      "featureType": "poi.business",
      "elementType": "all",
      "stylers": [
        {
          "visibility": "off"
        }
      ]
    },
    {
      "featureType": "poi.medical",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#fbd3da"
        }
      ]
    },
    {
      "featureType": "poi.park",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#bde6ab"
        }
      ]
    },
    {
      "featureType": "road",
      "elementType": "geometry.stroke",
      "stylers": [
        {
          "visibility": "off"
        }
      ]
    },
    {
      "featureType": "road",
      "elementType": "labels",
      "stylers": [
        {
          "visibility": "off"
        }
      ]
    },
    {
      "featureType": "road.highway",
      "elementType": "geometry.fill",
      "stylers": [
        {
          "color": "#ffe15f"
        }
      ]
    },
    {
      "featureType": "road.highway",
      "elementType": "geometry.stroke",
      "stylers": [
        {
          "color": "#efd151"
        }
      ]
    },
    {
      "featureType": "road.arterial",
      "elementType": "geometry.fill",
      "stylers": [
        {
          "color": "#ffffff"
        }
      ]
    },
    {
      "featureType": "road.local",
      "elementType": "geometry.fill",
      "stylers": [
        {
          "color": "black"
        }
      ]
    },
    {
      "featureType": "transit.station.airport",
      "elementType": "geometry.fill",
      "stylers": [
        {
          "color": "#cfb2db"
        }
      ]
    },
    {
      "featureType": "water",
      "elementType": "geometry",
      "stylers": [
        {
          "color": "#a2daf2"
        }
      ]
    }
  ];
  handler.buildMap({
    provider: {
      styles: styles
    },
    internal: { id: 'map' }
  }, function() {
    markers = handler.addMarkers(<%= raw @hash.to_json %>);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
    if (markers.length == 0) {
      handler.getMap().setZoom(2);
    } else if (markers.length == 1) {
      handler.getMap().setZoom(14);
    }
  });
});
</script>
<% end %>

<% end %>
